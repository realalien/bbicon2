<project name="${project_name}" default="dist" basedir=".">
	<description>
        buildfile for Remote Monitor application. For help on Ant, see:http://ant.apache.org/manual/ 
    </description>
	<!-- set global properties for this build -->
	<property name="project_name" value="RemoteMonitor" />
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="resources" location="resources" />
	<property name="lib.dir" value="lib" />
	<path id="classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<!--
	NOTES: 
	* do NOT declare  timestamp here as it will overrite the same name variable in the target 
	-->


	<target name="init" depends="clean">
		<!-- Create the time stamp -->
		<tstamp>
			<format property="timestamp" pattern="yyyy-MM-dd_hhmm" />
		</tstamp>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
		<!--echo message="var timestamp isï¼š ${timestamp}" /-->
	</target>


	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath">
		</javac>
	</target>

	<target name="copy.resources" depends="compile" description="copy the resource files to the build directory">
		<copy todir="${build}">
			<fileset dir="resources" />
		</copy>
	</target>

	<target name="dist" depends="compile, copy.resources" description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/" />


		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/${project_name}-${timestamp}.jar" basedir="${build}">

			<manifest>
				<attribute name="Main-Class" value="com.spicyhorse.qa.remotemonitor.App" />
				<attribute name="Created-By" value="realalien@gmail.com" />
				<attribute name="Build-JDK" value="1.6" />
				<attribute name="Implementation-Title" value="Remote Status Monitor" />
				<attribute name="Implementation-Version" value="0.1" />
				<attribute name="Class-Path" value="log4j-1.2.15.jar" />
			</manifest>
		</jar>

		<copy todir="${dist}">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
			
			<fileset dir="${basedir}">
				<include name="log4j.properties" />
			</fileset>
		</copy>
		
	</target>

	<target name="demo.run" depends="dist" description="run the program">
		<java jar="${dist}/${project_name}-${timestamp}.jar" fork="true" failonerror="true" maxmemory="128m">
			<!--arg value="-h" /-->
			<classpath>
				<path refid="classpath" />
				<!--path location="${dist}/${ant.project.name}.jar"/-->
			</classpath>
		</java>
	</target>


	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>
</project>